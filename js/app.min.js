"use strict";

document.addEventListener('DOMContentLoaded', function () {
  // height (100vh) fix for IOS
  var vh = window.innerHeight * 0.01;
  document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));

  // resize
  window.addEventListener('resize', function () {
    var vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
  });
  function bodyFixScroll(status) {
    var scrollPosition = 0;
    var paddingOffset = window.innerWidth - document.body.offsetWidth + 'px';
    var elementsFixed = document.querySelectorAll('.fixed');
    if (status) {
      scrollPosition = window.pageYOffset;
      document.body.style.overflow = 'hidden';
      document.body.style.position = 'fixed';
      document.body.style.top = '-' + scrollPosition + 'px';
      document.body.style.width = '100%';
      document.body.style.paddingRight = paddingOffset;
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.marginRight = paddingOffset;
        });
      }
    } else {
      scrollPosition = Math.abs(parseInt(document.querySelector('body').style.top.replace('px', '')));
      document.body.style.removeProperty('overflow');
      document.body.style.removeProperty('position');
      document.body.style.removeProperty('top');
      document.body.style.removeProperty('width');
      document.body.style.removeProperty('padding-right');
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.removeProperty('margin-right');
        });
      }
      window.scrollTo({
        top: !isNaN(scrollPosition) ? scrollPosition : 0,
        behavior: "instant"
      });
    }
  }

  // slides up/down/toggle
  var slideUpQna = function slideUpQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.transitionProperty = 'height, margin, padding';
    target.style.transitionDuration = duration + 'ms';
    target.style.height = target.offsetHeight + 'px';
    target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.previousElementSibling.style.pointerEvents = 'none';
    window.setTimeout(function () {
      target.style.display = 'none';
      target.style.removeProperty('height');
      target.style.removeProperty('padding-top');
      target.style.removeProperty('padding-bottom');
      target.style.removeProperty('margin-top');
      target.style.removeProperty('margin-bottom');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      target.previousElementSibling.style.pointerEvents = 'auto';
    }, duration);
    target.parentNode.classList.remove('is--open');
  };
  var slideDownQna = function slideDownQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.removeProperty('display');
    var display = window.getComputedStyle(target).display;
    if (display === 'none') display = 'block';
    target.style.display = display;
    var height = target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.offsetHeight;
    target.style.transitionProperty = "height, margin, padding";
    target.style.transitionDuration = duration + 'ms';
    target.style.height = height + 'px';
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    target.previousElementSibling.style.pointerEvents = 'none';
    window.setTimeout(function () {
      target.style.removeProperty('height');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      target.previousElementSibling.style.pointerEvents = 'auto';
    }, duration);
    target.parentNode.classList.add('is--open');
  };

  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // menu && search
  var header = document.getElementById('header');
  var hamburger = document.getElementById('hamburger-toggle');
  var searchBtn = document.getElementById('search-toggle');
  if (hamburger) {
    hamburger.addEventListener('click', function (event) {
      event.preventDefault();
      if (!hamburger.classList.contains('hamburger--active')) {
        header.classList.add('header--fixed');
        if (window.pageYOffset >= header.getBoundingClientRect().height) {
          header.querySelector('.header__fixed').style.transform = 'translate3d(0px, 0px, 0px)';
          header.querySelector('.header__fixed').style.transition = 'transform 0.2s ease-in-out';
          header.querySelector('.header__fixed').style.position = 'fixed';
        }
        if (!header.classList.contains('header--menu')) {
          header.classList.add('header--menu');
        }
        hamburger.classList.add('hamburger--active');
        bodyFixScroll(1);
      } else {
        if (header.classList.contains('header--menu')) {
          header.classList.remove('header--menu');
        } else if (header.classList.contains('header--search')) {
          header.classList.remove('header--search');
        } else if (header.classList.contains('header--search-menu')) {
          header.classList.remove('header--search-menu');
        } else if (header.classList.contains('header--menu-search')) {
          header.classList.remove('header--menu-search');
        }
        header.classList.remove('header--fixed');
        hamburger.classList.remove('hamburger--active');
        bodyFixScroll();
      }
    });
  }
  if (searchBtn) {
    searchBtn.addEventListener('click', function (event) {
      event.preventDefault();
      if (!header.classList.contains('header--search') && !header.classList.contains('header--search-menu') && !header.classList.contains('header--menu') && !header.classList.contains('header--menu-search')) {
        header.classList.add('header--fixed');
        hamburger.classList.add('hamburger--active');
        header.classList.add('header--search');
        bodyFixScroll(1);
      } else if (header.classList.contains('header--search')) {
        header.classList.remove('header--fixed');
        hamburger.classList.remove('hamburger--active');
        header.classList.remove('header--search');
        bodyFixScroll();
      } else if (header.classList.contains('header--menu')) {
        header.classList.remove('header--menu');
        header.classList.add('header--search-menu');
      } else if (header.classList.contains('header--search-menu')) {
        header.classList.remove('header--search-menu');
        header.classList.add('header--menu-search');
      } else if (header.classList.contains('header--menu-search')) {
        header.classList.remove('header--menu-search');
        header.classList.add('header--search-menu');
      }
    });
  }

  // slim select
  var allSelect = document.querySelectorAll('.js-select');
  if (allSelect) {
    allSelect.forEach(function (item) {
      new SlimSelect({
        select: item
      });
    });
  }

  // input field visibility
  var allModal = document.querySelectorAll('.modal');
  if (allModal) {
    allModal.forEach(function (item) {
      item.addEventListener('click', function (event) {
        var visibilityInputButton = event.target.closest('.input-field__visibility-btn');
        if (!visibilityInputButton) return;
        if (!item.contains(visibilityInputButton)) return;
        event.preventDefault();
        var parent = visibilityInputButton.closest('.input-field');
        var input = parent.querySelector('.input-field__input');
        if (input.type === 'password') {
          visibilityInputButton.classList.add('is--active');
          input.type = 'text';
        } else {
          visibilityInputButton.classList.remove('is--active');
          input.type = 'password';
        }
      });
    });
  }

  // accordeon
  var catalogFilterTrigger = document.querySelectorAll('.catalog-filter__trigger');
  if (catalogFilterTrigger) {
    catalogFilterTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (!item.parentNode.classList.contains('is--open')) {
          slideDownQna(item.nextElementSibling);
        } else {
          slideUpQna(item.nextElementSibling);
        }
      });
    });
  }

  // range
  var rangeSliders = document.querySelectorAll('.catalog-filter__range-slider');
  if (rangeSliders) {
    rangeSliders.forEach(function (slider) {
      var parent = slider.closest('.catalog-filter__range');
      var inputs = [parent.querySelector('.range-field__input--min'), parent.querySelector('.range-field__input--max')];
      noUiSlider.create(slider, {
        start: [Number(slider.dataset.rangeStart), Number(slider.dataset.rangeEnd)],
        connect: true,
        range: {
          'min': Number(slider.dataset.rangeMin),
          'max': Number(slider.dataset.rangeMax)
        }
      });
      slider.noUiSlider.on('update', function (values, handle) {
        inputs[handle].value = Math.round(values[handle]);
      });
      inputs.forEach(function (input, handle) {
        input.addEventListener('change', function () {
          slider.noUiSlider.setHandle(handle, Math.round(this.value));
        });
        input.addEventListener('keydown', function (e) {
          var values = slider.noUiSlider.get();
          var value = Number(values[handle]);

          // [[handle0_down, handle0_up], [handle1_down, handle1_up]]
          var steps = slider.noUiSlider.steps();

          // [down, up]
          var step = steps[handle];
          var position;

          // 13 is enter,
          // 38 is key up,
          // 40 is key down.
          switch (e.which) {
            case 13:
              slider.noUiSlider.setHandle(handle, Math.round(this.value));
              break;
            case 38:
              // Get step to go increase slider value (up)
              position = step[1];

              // false = no step is set
              if (position === false) {
                position = 1;
              }

              // null = edge of slider
              if (position !== null) {
                slider.noUiSlider.setHandle(handle, Math.round(value + position));
              }
              break;
            case 40:
              position = step[0];
              if (position === false) {
                position = 1;
              }
              if (position !== null) {
                slider.noUiSlider.setHandle(handle, Math.round(value - position));
              }
              break;
          }
        });
      });
    });
  }

  // catalog sections
  var catalogSectionsSelect = document.querySelector('.catalog-sections__select');
  if (catalogSectionsSelect) {
    catalogSectionsSelect.addEventListener('change', function (event) {
      event.preventDefault();
      var arrValue = catalogSectionsSelect.value;
      document.querySelectorAll('.catalog-sections__item').forEach(function (child) {
        return child.classList.remove('is--active');
      });
      document.querySelector('.catalog-sections__item[data-sections-id="' + arrValue + '"]').classList.add('is--active');
    });
  }

  // sort btns
  var sortBtnsSelect = document.querySelector('.c-sort-btns__select select');
  if (sortBtnsSelect) {
    sortBtnsSelect.addEventListener('change', function (event) {
      event.preventDefault();
      var arrValue = sortBtnsSelect.value.split(':');
      document.querySelectorAll('.c-sort-btns__control').forEach(function (child) {
        child.classList.remove('is--active');
        child.classList.remove('is--desc');
      });
      document.querySelector('.c-sort-btns__control[data-sort-id="' + arrValue[0] + '"]').classList.add('is--active');
      if (arrValue[1] == 'desc') {
        document.querySelector('.c-sort-btns__control[data-sort-id="' + arrValue[0] + '"]').classList.add('is--desc');
      }
    });
  }

  // sort view
  var sortViewBtn = document.querySelectorAll('.c-sort-view__control');
  var catalogItems = document.querySelectorAll('.catalog__item');
  if (sortViewBtn) {
    sortViewBtn.forEach(function (item, i) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var sortID = item.dataset.id;
        sortViewBtn.forEach(function (child) {
          return child.classList.remove('is--active');
        });
        item.classList.add('is--active');
        if (sortID == 0) {
          catalogItems.forEach(function (item) {
            item.classList.add('catalog__item--wide');
          });
        } else {
          catalogItems.forEach(function (item) {
            item.classList.remove('catalog__item--wide');
          });
        }
      });
    });
  }

  // filter trigger
  var cFilterTriggerBtn = document.querySelector('.c-filter-trigger__btn');
  var catalogFilter = document.querySelector('.catalog-filter');
  var catalogFilterClose = document.querySelector('.catalog-filter__close');
  if (cFilterTriggerBtn && catalogFilter && catalogFilterClose) {
    cFilterTriggerBtn.addEventListener('click', function (event) {
      event.preventDefault();
      if (!catalogFilter.classList.contains('is--active')) {
        catalogFilter.classList.add('is--active');
        bodyFixScroll(1);
      }
    });
    catalogFilterClose.addEventListener('click', function (event) {
      event.preventDefault();
      catalogFilter.classList.remove('is--active');
      bodyFixScroll();
    });
  }

  // hubs slider
  var hubsSlider = document.querySelector('.catalog-hubs__slider .swiper');
  if (hubsSlider) {
    var myHubsSlider = new Swiper(hubsSlider, {
      slidesPerView: 'auto',
      spaceBetween: 4,
      speed: 500,
      navigation: {
        prevEl: hubsSlider.closest('.catalog-hubs__slider').querySelector('.swiper-button-prev'),
        nextEl: hubsSlider.closest('.catalog-hubs__slider').querySelector('.swiper-button-next')
      },
      breakpoints: {
        0: {
          spaceBetween: 2
        },
        1024: {
          spaceBetween: 4
        }
      }
    });
  }

  // modal
  var modal = document.querySelectorAll('.modal');
  var modalBtn = document.querySelectorAll('.modal-btn');
  var modalClose = document.querySelectorAll('.modal__close');
  var modalOverlay = document.querySelectorAll('.modal__overlay');
  if (modal && modalBtn && modalClose && modalOverlay) {
    // modal btn
    modalBtn.forEach(function (item, i) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var modalID = item.dataset.id;
        document.querySelectorAll('.modal.modal--active').forEach(function (child) {
          return child.classList.remove('modal--active');
        });
        document.getElementById(modalID).classList.add('modal--active');
        bodyFixScroll(1);
      });
    });

    // modal close
    modalClose.forEach(function (item) {
      item.addEventListener('click', function () {
        document.querySelectorAll('.modal.modal--active').forEach(function (child) {
          return child.classList.remove('modal--active');
        });
        bodyFixScroll();
      });
    });

    // modal overlay
    modalOverlay.forEach(function (item) {
      item.addEventListener('click', function () {
        document.querySelectorAll('.modal.modal--active').forEach(function (child) {
          return child.classList.remove('modal--active');
        });
        bodyFixScroll();
      });
    });
  }

  // modal switch
  var modalTabs = document.querySelectorAll('.modal__tab');
  if (modalTabs) {
    modalTabs.forEach(function (item, index) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.modal__wrapper');
        parent.querySelectorAll('.modal__tab').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        parent.querySelectorAll('.modal__left').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        parent.querySelectorAll('.modal__right').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        item.classList.add('is--active');
        if (item.dataset.modalTab === 'left') {
          parent.querySelector('.modal__left').classList.add('is--active');
        } else if (item.dataset.modalTab === 'right') {
          parent.querySelector('.modal__right').classList.add('is--active');
        }
      });
    });
  }

  // modal auth change
  var modalAuthTrigger = document.querySelectorAll('.modal-auth-trigger');
  function modalAuthChange() {
    if (modalAuthTrigger) {
      modalAuthTrigger.forEach(function (item) {
        item.addEventListener('click', function (event) {
          event.preventDefault();
          var parent = item.closest('.modal__main');
          var formId = item.dataset.authForm;
          parent.querySelectorAll('.modal__holder').forEach(function (child) {
            return child.classList.remove('is--active');
          });
          parent.querySelector('.modal__holder[data-auth-form=' + formId + ']').classList.add('is--active');
        });
      });
    }
  }
  modalAuthChange();

  // scroll
  var prevScrollpos = window.pageYOffset;
  function headerFixedUp() {
    if (window.pageYOffset >= header.getBoundingClientRect().height) {
      header.querySelector('.header__fixed').style.transform = 'translate3d(0px, 0px, 0px)';
      header.querySelector('.header__fixed').style.transition = 'transform 0.2s ease-in-out';
      header.querySelector('.header__fixed').style.position = 'fixed';
      if (header.classList.contains('header--transparent')) {
        header.querySelector('.header__fixed').style.background = '#2a2b29';
      }
    } else if (window.pageYOffset <= 0) {
      header.querySelector('.header__fixed').style.transform = 'translate3d(0px, 0px, 0px)';
      header.querySelector('.header__fixed').style.transition = 'none';
      header.querySelector('.header__fixed').style.position = 'relative';
      setTimeout(function () {
        header.querySelector('.header__fixed').style.background = 'transparent';
      }, 200);
    }
  }
  function headerFixedDown() {
    if (window.pageYOffset >= header.getBoundingClientRect().height) {
      header.querySelector('.header__fixed').style.transform = 'translate3d(0px, -100%, 0px)';
      header.querySelector('.header__fixed').style.transition = 'transform 0.2s ease-in-out';
      setTimeout(function () {
        header.querySelector('.header__fixed').style.background = 'transparent';
        header.querySelector('.header__fixed').style.position = 'fixed';
      }, 200);
    }
  }
  window.addEventListener('scroll', function () {
    var currentScrollPos = window.pageYOffset;
    if (prevScrollpos > currentScrollPos || prevScrollpos <= 0) {
      // if up
      if (header) {
        if (!header.classList.contains('header--search') && !header.classList.contains('header--menu') && !header.classList.contains('header--search-menu') && !header.classList.contains('header--menu-search')) {
          headerFixedUp();
        }
      }
    } else {
      // if down
      if (header) {
        if (!header.classList.contains('header--search') && !header.classList.contains('header--menu') && !header.classList.contains('header--search-menu') && !header.classList.contains('header--menu-search')) {
          headerFixedDown();
        }
      }
    }
    prevScrollpos = currentScrollPos;
  });

  // ajax
  var global = {};
  $(document).on('keyup', '.search__input', function () {
    var searchDropdown = document.querySelector('.search__dropdown');
    var searchDropdownContent = document.querySelector('.search__list');
    var $form = $(this).parents('form');
    var $val = $(this).val();
    if ($val.length > 2) {
      $.ajax({
        url: $form.data('suggest-url'),
        context: $($form.data('ajaxblock')),
        data: {
          ajax: 'Y',
          q: $(this).val()
        },
        success: function success(data) {
          $(this).html(data);
        },
        timeout: global.ajaxTimeout,
        async: true,
        error: function error(jqXHR, textStatus, errorThrown) {
          xhr = false;
          console.log(textStatus);
          console.log(errorThrown);
          console.log(jqXHR);
        }
      });
    } else {
      if (searchDropdownContent && searchDropdown.contains(searchDropdownContent)) {
        searchDropdown.removeChild(searchDropdownContent);
      }
    }
  });
});